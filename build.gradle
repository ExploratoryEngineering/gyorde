plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
    id "com.google.protobuf" version "0.8.10"
    id "java"
    id 'idea'
}

group 'org.ostelco'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'io.grpc', name: 'grpc-all', version: '1.19.0'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.8.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


sourceSets {
    main {
        proto {
            srcDir 'protobuf'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java'
            srcDirs 'generated-sources/main/java'
        }
    }
    test {
        proto {
            // In addition to the default 'src/test/proto'
            // srcDir 'src/test/protocolbuffers'
        }
    }
}

def grpcVersion = '1.27.0-SNAPSHOT' // CURRENT_GRPC_VERSION


protobuf {
    // Configure the protoc executable
    // protoc {
    //    // Download from repositories
    //    artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'
    // }

    generateProtoTasks.generatedFilesBaseDir = 'src'

    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    // all() returns the collection of all protoc tasks
    // all()*.plugins { grpc {} }

    // all().each { task ->
    // Here you can configure the task
    // }

    // In addition to all(), you may get the task collection by various
    // criteria:

    // (Java only) returns tasks for a sourceSet
    // ofSourceSet('main')
}